/* Generated by Yosys 0.8+576 (git sha1 dd8d264, gcc 4.8.5 -fPIC -Os) */

module GcdUnitCtrlRTL_0x4d0fc71ead8d3d9e(a_mux_sel, a_reg_en, b_mux_sel, b_reg_en, clk, is_a_lt_b, is_b_zero, req_rdy, req_val, reset, resp_rdy, resp_val);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  output [1:0] a_mux_sel;
  output a_reg_en;
  output b_mux_sel;
  output b_reg_en;
  input clk;
  wire [1:0] curr_state__0;
  input is_a_lt_b;
  input is_b_zero;
  wire [1:0] next_state__0;
  output req_rdy;
  input req_val;
  input reset;
  input resp_rdy;
  output resp_val;
  INV_X1 _04_ (
    .A(curr_state__0[0]),
    .ZN(_00_)
  );
  INV_X1 _05_ (
    .A(curr_state__0[1]),
    .ZN(a_reg_en)
  );
  INV_X1 _06_ (
    .A(is_a_lt_b),
    .ZN(_01_)
  );
  NOR2_X1 _07_ (
    .A1(curr_state__0[0]),
    .A2(curr_state__0[1]),
    .ZN(b_mux_sel)
  );
  NOR2_X1 _08_ (
    .A1(curr_state__0[0]),
    .A2(a_reg_en),
    .ZN(resp_val)
  );
  NOR3_X1 _09_ (
    .A1(_00_),
    .A2(curr_state__0[1]),
    .A3(is_a_lt_b),
    .ZN(a_mux_sel[0])
  );
  NOR3_X1 _10_ (
    .A1(_00_),
    .A2(curr_state__0[1]),
    .A3(_01_),
    .ZN(a_mux_sel[1])
  );
  NAND4_X1 _11_ (
    .A1(curr_state__0[0]),
    .A2(a_reg_en),
    .A3(_01_),
    .A4(is_b_zero),
    .ZN(_02_)
  );
  AOI21_X1 _12_ (
    .A(curr_state__0[0]),
    .B1(a_reg_en),
    .B2(req_val),
    .ZN(_03_)
  );
  AOI21_X1 _13_ (
    .A(_03_),
    .B1(a_mux_sel[0]),
    .B2(is_b_zero),
    .ZN(next_state__0[0])
  );
  AOI22_X1 _14_ (
    .A1(resp_rdy),
    .A2(resp_val),
    .B1(_02_),
    .B2(a_reg_en),
    .ZN(next_state__0[1])
  );
  AOI21_X1 _15_ (
    .A(curr_state__0[1]),
    .B1(_01_),
    .B2(curr_state__0[0]),
    .ZN(b_reg_en)
  );
  RegRst_0x9f365fdf6c8998a state (
    .clk(clk),
    .in_(next_state__0),
    .out(curr_state__0),
    .reset(reset)
  );
  assign req_rdy = b_mux_sel;
endmodule

module GcdUnitDpathRTL_0x4d0fc71ead8d3d9e(a_mux_sel, a_reg_en, b_mux_sel, b_reg_en, clk, is_a_lt_b, is_b_zero, req_msg_a, req_msg_b, reset, resp_msg);
  wire [15:0] \a_lt_b$in0 ;
  wire [15:0] \a_lt_b$in1 ;
  wire [15:0] \a_mux$out ;
  input [1:0] a_mux_sel;
  input a_reg_en;
  wire [15:0] \b_mux$out ;
  input b_mux_sel;
  input b_reg_en;
  input clk;
  output is_a_lt_b;
  output is_b_zero;
  input [15:0] req_msg_a;
  input [15:0] req_msg_b;
  input reset;
  output [15:0] resp_msg;
  LtComparator_0x422b1f52edd46a85 a_lt_b (
    .clk(clk),
    .in0(\a_lt_b$in0 ),
    .in1(\a_lt_b$in1 ),
    .out(is_a_lt_b),
    .reset(reset)
  );
  Mux_0x683fa1a418b072c9 a_mux (
    .clk(clk),
    .\in_$000 (req_msg_a),
    .\in_$001 (resp_msg),
    .\in_$002 (\a_lt_b$in1 ),
    .out(\a_mux$out ),
    .reset(reset),
    .sel(a_mux_sel)
  );
  RegEn_0x68db79c4ec1d6e5b a_reg (
    .clk(clk),
    .en(a_reg_en),
    .in_(\a_mux$out ),
    .out(\a_lt_b$in0 ),
    .reset(reset)
  );
  Mux_0xdd6473406d1a99a b_mux (
    .clk(clk),
    .\in_$000 (\a_lt_b$in0 ),
    .\in_$001 (req_msg_b),
    .out(\b_mux$out ),
    .reset(reset),
    .sel(b_mux_sel)
  );
  RegEn_0x68db79c4ec1d6e5b b_reg (
    .clk(clk),
    .en(b_reg_en),
    .in_(\b_mux$out ),
    .out(\a_lt_b$in1 ),
    .reset(reset)
  );
  ZeroComparator_0x422b1f52edd46a85 b_zero (
    .clk(clk),
    .in_(\a_lt_b$in1 ),
    .out(is_b_zero),
    .reset(reset)
  );
  Subtractor_0x422b1f52edd46a85 sub (
    .clk(clk),
    .in0(\a_lt_b$in0 ),
    .in1(\a_lt_b$in1 ),
    .out(resp_msg),
    .reset(reset)
  );
endmodule

module LtComparator_0x422b1f52edd46a85(clk, in0, in1, out, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  input clk;
  input [15:0] in0;
  input [15:0] in1;
  output out;
  input reset;
  INV_X1 _059_ (
    .A(in1[14]),
    .ZN(_000_)
  );
  INV_X1 _060_ (
    .A(in0[14]),
    .ZN(_001_)
  );
  INV_X1 _061_ (
    .A(in0[13]),
    .ZN(_002_)
  );
  INV_X1 _062_ (
    .A(in0[12]),
    .ZN(_003_)
  );
  INV_X1 _063_ (
    .A(in0[11]),
    .ZN(_004_)
  );
  INV_X1 _064_ (
    .A(in0[10]),
    .ZN(_005_)
  );
  INV_X1 _065_ (
    .A(in0[9]),
    .ZN(_006_)
  );
  INV_X1 _066_ (
    .A(in1[9]),
    .ZN(_007_)
  );
  INV_X1 _067_ (
    .A(in1[8]),
    .ZN(_008_)
  );
  INV_X1 _068_ (
    .A(in0[8]),
    .ZN(_009_)
  );
  INV_X1 _069_ (
    .A(in0[7]),
    .ZN(_010_)
  );
  INV_X1 _070_ (
    .A(in0[6]),
    .ZN(_011_)
  );
  INV_X1 _071_ (
    .A(in0[5]),
    .ZN(_012_)
  );
  INV_X1 _072_ (
    .A(in1[5]),
    .ZN(_013_)
  );
  INV_X1 _073_ (
    .A(in0[4]),
    .ZN(_014_)
  );
  INV_X1 _074_ (
    .A(in1[3]),
    .ZN(_015_)
  );
  INV_X1 _075_ (
    .A(in1[2]),
    .ZN(_016_)
  );
  INV_X1 _076_ (
    .A(in1[1]),
    .ZN(_017_)
  );
  INV_X1 _077_ (
    .A(in0[0]),
    .ZN(_018_)
  );
  INV_X1 _078_ (
    .A(in1[15]),
    .ZN(_019_)
  );
  INV_X1 _079_ (
    .A(in0[15]),
    .ZN(_020_)
  );
  OAI22_X1 _080_ (
    .A1(in1[14]),
    .A2(_001_),
    .B1(in1[15]),
    .B2(_020_),
    .ZN(_021_)
  );
  OAI222_X1 _081_ (
    .A1(_000_),
    .A2(in0[14]),
    .B1(_002_),
    .B2(in1[13]),
    .C1(_019_),
    .C2(in0[15]),
    .ZN(_022_)
  );
  OR2_X1 _082_ (
    .A1(_021_),
    .A2(_022_),
    .ZN(_023_)
  );
  AOI22_X1 _083_ (
    .A1(_002_),
    .A2(in1[13]),
    .B1(in1[12]),
    .B2(_003_),
    .ZN(_024_)
  );
  AOI22_X1 _084_ (
    .A1(_004_),
    .A2(in1[11]),
    .B1(in1[10]),
    .B2(_005_),
    .ZN(_025_)
  );
  AND2_X1 _085_ (
    .A1(_024_),
    .A2(_025_),
    .ZN(_026_)
  );
  NAND2_X1 _086_ (
    .A1(_024_),
    .A2(_025_),
    .ZN(_027_)
  );
  OAI22_X1 _087_ (
    .A1(in0[9]),
    .A2(_007_),
    .B1(_008_),
    .B2(in0[8]),
    .ZN(_028_)
  );
  OAI22_X1 _088_ (
    .A1(in1[12]),
    .A2(_003_),
    .B1(_004_),
    .B2(in1[11]),
    .ZN(_029_)
  );
  OAI222_X1 _089_ (
    .A1(in1[10]),
    .A2(_005_),
    .B1(_006_),
    .B2(in1[9]),
    .C1(in1[8]),
    .C2(_009_),
    .ZN(_030_)
  );
  OR3_X1 _090_ (
    .A1(_028_),
    .A2(_029_),
    .A3(_030_),
    .ZN(_031_)
  );
  NOR3_X1 _091_ (
    .A1(_023_),
    .A2(_027_),
    .A3(_031_),
    .ZN(_032_)
  );
  NAND2_X1 _092_ (
    .A1(in1[7]),
    .A2(_010_),
    .ZN(_033_)
  );
  XOR2_X1 _093_ (
    .A(in1[6]),
    .B(in0[6]),
    .Z(_034_)
  );
  XOR2_X1 _094_ (
    .A(in1[7]),
    .B(in0[7]),
    .Z(_035_)
  );
  NOR2_X1 _095_ (
    .A1(_034_),
    .A2(_035_),
    .ZN(_036_)
  );
  AOI211_X1 _096_ (
    .A(_034_),
    .B(_035_),
    .C1(in0[5]),
    .C2(_013_),
    .ZN(_037_)
  );
  OAI21_X1 _097_ (
    .A(_036_),
    .B1(in1[5]),
    .B2(_012_),
    .ZN(_038_)
  );
  AOI22_X1 _098_ (
    .A1(_012_),
    .A2(in1[5]),
    .B1(in1[4]),
    .B2(_014_),
    .ZN(_039_)
  );
  OAI211_X1 _099_ (
    .A(_037_),
    .B(_039_),
    .C1(in1[4]),
    .C2(_014_),
    .ZN(_040_)
  );
  NOR2_X1 _100_ (
    .A1(_015_),
    .A2(in0[3]),
    .ZN(_041_)
  );
  XOR2_X1 _101_ (
    .A(in1[2]),
    .B(in0[2]),
    .Z(_042_)
  );
  XOR2_X1 _102_ (
    .A(in1[3]),
    .B(in0[3]),
    .Z(_043_)
  );
  NOR2_X1 _103_ (
    .A1(_042_),
    .A2(_043_),
    .ZN(_044_)
  );
  NOR2_X1 _104_ (
    .A1(_017_),
    .A2(in0[1]),
    .ZN(_045_)
  );
  XNOR2_X1 _105_ (
    .A(in1[1]),
    .B(in0[1]),
    .ZN(_046_)
  );
  OAI211_X1 _106_ (
    .A(_044_),
    .B(_046_),
    .C1(in1[0]),
    .C2(_018_),
    .ZN(_047_)
  );
  AOI211_X1 _107_ (
    .A(_016_),
    .B(in0[2]),
    .C1(_015_),
    .C2(in0[3]),
    .ZN(_048_)
  );
  AOI211_X1 _108_ (
    .A(_041_),
    .B(_048_),
    .C1(_045_),
    .C2(_044_),
    .ZN(_049_)
  );
  AOI21_X1 _109_ (
    .A(_040_),
    .B1(_047_),
    .B2(_049_),
    .ZN(_050_)
  );
  OAI211_X1 _110_ (
    .A(in1[6]),
    .B(_011_),
    .C1(in1[7]),
    .C2(_010_),
    .ZN(_051_)
  );
  OAI211_X1 _111_ (
    .A(_033_),
    .B(_051_),
    .C1(_039_),
    .C2(_038_),
    .ZN(_052_)
  );
  OAI21_X1 _112_ (
    .A(_032_),
    .B1(_050_),
    .B2(_052_),
    .ZN(_053_)
  );
  OAI221_X1 _113_ (
    .A(_028_),
    .B1(in1[9]),
    .B2(_006_),
    .C1(in1[10]),
    .C2(_005_),
    .ZN(_054_)
  );
  AOI221_X1 _114_ (
    .A(_023_),
    .B1(_024_),
    .B2(_029_),
    .C1(_054_),
    .C2(_026_),
    .ZN(_055_)
  );
  AOI211_X1 _115_ (
    .A(_000_),
    .B(in0[14]),
    .C1(_019_),
    .C2(in0[15]),
    .ZN(_056_)
  );
  AOI211_X1 _116_ (
    .A(_055_),
    .B(_056_),
    .C1(in1[15]),
    .C2(_020_),
    .ZN(_057_)
  );
  AOI211_X1 _117_ (
    .A(_040_),
    .B(_047_),
    .C1(in1[0]),
    .C2(_018_),
    .ZN(_058_)
  );
  AOI22_X1 _118_ (
    .A1(_053_),
    .A2(_057_),
    .B1(_058_),
    .B2(_032_),
    .ZN(out)
  );
endmodule

module Mux_0x683fa1a418b072c9(clk, \in_$000 , \in_$001 , \in_$002 , out, reset, sel);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  input clk;
  input [15:0] \in_$000 ;
  input [15:0] \in_$001 ;
  input [15:0] \in_$002 ;
  output [15:0] out;
  input reset;
  input [1:0] sel;
  INV_X1 _052_ (
    .A(sel[0]),
    .ZN(_019_)
  );
  INV_X1 _053_ (
    .A(\in_$001 [0]),
    .ZN(_020_)
  );
  INV_X1 _054_ (
    .A(\in_$002 [0]),
    .ZN(_021_)
  );
  INV_X1 _055_ (
    .A(\in_$001 [1]),
    .ZN(_022_)
  );
  INV_X1 _056_ (
    .A(\in_$002 [1]),
    .ZN(_023_)
  );
  INV_X1 _057_ (
    .A(\in_$001 [2]),
    .ZN(_024_)
  );
  INV_X1 _058_ (
    .A(\in_$002 [2]),
    .ZN(_025_)
  );
  INV_X1 _059_ (
    .A(\in_$001 [3]),
    .ZN(_026_)
  );
  INV_X1 _060_ (
    .A(\in_$002 [3]),
    .ZN(_027_)
  );
  INV_X1 _061_ (
    .A(\in_$001 [4]),
    .ZN(_028_)
  );
  INV_X1 _062_ (
    .A(\in_$002 [4]),
    .ZN(_029_)
  );
  INV_X1 _063_ (
    .A(\in_$001 [5]),
    .ZN(_030_)
  );
  INV_X1 _064_ (
    .A(\in_$002 [5]),
    .ZN(_031_)
  );
  INV_X1 _065_ (
    .A(\in_$001 [6]),
    .ZN(_032_)
  );
  INV_X1 _066_ (
    .A(\in_$002 [6]),
    .ZN(_033_)
  );
  INV_X1 _067_ (
    .A(\in_$001 [7]),
    .ZN(_034_)
  );
  INV_X1 _068_ (
    .A(\in_$002 [7]),
    .ZN(_035_)
  );
  INV_X1 _069_ (
    .A(\in_$001 [8]),
    .ZN(_036_)
  );
  INV_X1 _070_ (
    .A(\in_$002 [8]),
    .ZN(_037_)
  );
  INV_X1 _071_ (
    .A(\in_$001 [9]),
    .ZN(_038_)
  );
  INV_X1 _072_ (
    .A(\in_$002 [9]),
    .ZN(_039_)
  );
  INV_X1 _073_ (
    .A(\in_$001 [10]),
    .ZN(_040_)
  );
  INV_X1 _074_ (
    .A(\in_$002 [10]),
    .ZN(_041_)
  );
  INV_X1 _075_ (
    .A(\in_$001 [11]),
    .ZN(_042_)
  );
  INV_X1 _076_ (
    .A(\in_$002 [11]),
    .ZN(_043_)
  );
  INV_X1 _077_ (
    .A(\in_$001 [12]),
    .ZN(_044_)
  );
  INV_X1 _078_ (
    .A(\in_$002 [12]),
    .ZN(_045_)
  );
  INV_X1 _079_ (
    .A(\in_$001 [13]),
    .ZN(_046_)
  );
  INV_X1 _080_ (
    .A(\in_$002 [13]),
    .ZN(_047_)
  );
  INV_X1 _081_ (
    .A(\in_$001 [14]),
    .ZN(_048_)
  );
  INV_X1 _082_ (
    .A(\in_$002 [14]),
    .ZN(_049_)
  );
  INV_X1 _083_ (
    .A(\in_$001 [15]),
    .ZN(_050_)
  );
  INV_X1 _084_ (
    .A(\in_$002 [15]),
    .ZN(_051_)
  );
  NAND2_X1 _085_ (
    .A1(_019_),
    .A2(sel[1]),
    .ZN(_000_)
  );
  OR2_X1 _086_ (
    .A1(_019_),
    .A2(sel[1]),
    .ZN(_001_)
  );
  XNOR2_X1 _087_ (
    .A(sel[0]),
    .B(sel[1]),
    .ZN(_002_)
  );
  NAND2_X1 _088_ (
    .A1(\in_$000 [0]),
    .A2(_002_),
    .ZN(_003_)
  );
  OAI221_X1 _089_ (
    .A(_003_),
    .B1(_000_),
    .B2(_021_),
    .C1(_020_),
    .C2(_001_),
    .ZN(out[0])
  );
  NAND2_X1 _090_ (
    .A1(\in_$000 [1]),
    .A2(_002_),
    .ZN(_004_)
  );
  OAI221_X1 _091_ (
    .A(_004_),
    .B1(_000_),
    .B2(_023_),
    .C1(_022_),
    .C2(_001_),
    .ZN(out[1])
  );
  NAND2_X1 _092_ (
    .A1(\in_$000 [2]),
    .A2(_002_),
    .ZN(_005_)
  );
  OAI221_X1 _093_ (
    .A(_005_),
    .B1(_000_),
    .B2(_025_),
    .C1(_024_),
    .C2(_001_),
    .ZN(out[2])
  );
  NAND2_X1 _094_ (
    .A1(\in_$000 [3]),
    .A2(_002_),
    .ZN(_006_)
  );
  OAI221_X1 _095_ (
    .A(_006_),
    .B1(_000_),
    .B2(_027_),
    .C1(_026_),
    .C2(_001_),
    .ZN(out[3])
  );
  NAND2_X1 _096_ (
    .A1(\in_$000 [4]),
    .A2(_002_),
    .ZN(_007_)
  );
  OAI221_X1 _097_ (
    .A(_007_),
    .B1(_000_),
    .B2(_029_),
    .C1(_028_),
    .C2(_001_),
    .ZN(out[4])
  );
  NAND2_X1 _098_ (
    .A1(\in_$000 [5]),
    .A2(_002_),
    .ZN(_008_)
  );
  OAI221_X1 _099_ (
    .A(_008_),
    .B1(_000_),
    .B2(_031_),
    .C1(_030_),
    .C2(_001_),
    .ZN(out[5])
  );
  NAND2_X1 _100_ (
    .A1(\in_$000 [6]),
    .A2(_002_),
    .ZN(_009_)
  );
  OAI221_X1 _101_ (
    .A(_009_),
    .B1(_000_),
    .B2(_033_),
    .C1(_032_),
    .C2(_001_),
    .ZN(out[6])
  );
  NAND2_X1 _102_ (
    .A1(\in_$000 [7]),
    .A2(_002_),
    .ZN(_010_)
  );
  OAI221_X1 _103_ (
    .A(_010_),
    .B1(_000_),
    .B2(_035_),
    .C1(_034_),
    .C2(_001_),
    .ZN(out[7])
  );
  NAND2_X1 _104_ (
    .A1(\in_$000 [8]),
    .A2(_002_),
    .ZN(_011_)
  );
  OAI221_X1 _105_ (
    .A(_011_),
    .B1(_000_),
    .B2(_037_),
    .C1(_036_),
    .C2(_001_),
    .ZN(out[8])
  );
  NAND2_X1 _106_ (
    .A1(\in_$000 [9]),
    .A2(_002_),
    .ZN(_012_)
  );
  OAI221_X1 _107_ (
    .A(_012_),
    .B1(_000_),
    .B2(_039_),
    .C1(_038_),
    .C2(_001_),
    .ZN(out[9])
  );
  NAND2_X1 _108_ (
    .A1(\in_$000 [10]),
    .A2(_002_),
    .ZN(_013_)
  );
  OAI221_X1 _109_ (
    .A(_013_),
    .B1(_000_),
    .B2(_041_),
    .C1(_040_),
    .C2(_001_),
    .ZN(out[10])
  );
  NAND2_X1 _110_ (
    .A1(\in_$000 [11]),
    .A2(_002_),
    .ZN(_014_)
  );
  OAI221_X1 _111_ (
    .A(_014_),
    .B1(_000_),
    .B2(_043_),
    .C1(_042_),
    .C2(_001_),
    .ZN(out[11])
  );
  NAND2_X1 _112_ (
    .A1(\in_$000 [12]),
    .A2(_002_),
    .ZN(_015_)
  );
  OAI221_X1 _113_ (
    .A(_015_),
    .B1(_000_),
    .B2(_045_),
    .C1(_044_),
    .C2(_001_),
    .ZN(out[12])
  );
  NAND2_X1 _114_ (
    .A1(\in_$000 [13]),
    .A2(_002_),
    .ZN(_016_)
  );
  OAI221_X1 _115_ (
    .A(_016_),
    .B1(_000_),
    .B2(_047_),
    .C1(_046_),
    .C2(_001_),
    .ZN(out[13])
  );
  NAND2_X1 _116_ (
    .A1(\in_$000 [14]),
    .A2(_002_),
    .ZN(_017_)
  );
  OAI221_X1 _117_ (
    .A(_017_),
    .B1(_000_),
    .B2(_049_),
    .C1(_048_),
    .C2(_001_),
    .ZN(out[14])
  );
  NAND2_X1 _118_ (
    .A1(\in_$000 [15]),
    .A2(_002_),
    .ZN(_018_)
  );
  OAI221_X1 _119_ (
    .A(_018_),
    .B1(_000_),
    .B2(_051_),
    .C1(_050_),
    .C2(_001_),
    .ZN(out[15])
  );
endmodule

module Mux_0xdd6473406d1a99a(clk, \in_$000 , \in_$001 , out, reset, sel);
  input clk;
  input [15:0] \in_$000 ;
  input [15:0] \in_$001 ;
  output [15:0] out;
  input reset;
  input sel;
  MUX2_X1 _00_ (
    .A(\in_$000 [0]),
    .B(\in_$001 [0]),
    .S(sel),
    .Z(out[0])
  );
  MUX2_X1 _01_ (
    .A(\in_$000 [1]),
    .B(\in_$001 [1]),
    .S(sel),
    .Z(out[1])
  );
  MUX2_X1 _02_ (
    .A(\in_$000 [2]),
    .B(\in_$001 [2]),
    .S(sel),
    .Z(out[2])
  );
  MUX2_X1 _03_ (
    .A(\in_$000 [3]),
    .B(\in_$001 [3]),
    .S(sel),
    .Z(out[3])
  );
  MUX2_X1 _04_ (
    .A(\in_$000 [4]),
    .B(\in_$001 [4]),
    .S(sel),
    .Z(out[4])
  );
  MUX2_X1 _05_ (
    .A(\in_$000 [5]),
    .B(\in_$001 [5]),
    .S(sel),
    .Z(out[5])
  );
  MUX2_X1 _06_ (
    .A(\in_$000 [6]),
    .B(\in_$001 [6]),
    .S(sel),
    .Z(out[6])
  );
  MUX2_X1 _07_ (
    .A(\in_$000 [7]),
    .B(\in_$001 [7]),
    .S(sel),
    .Z(out[7])
  );
  MUX2_X1 _08_ (
    .A(\in_$000 [8]),
    .B(\in_$001 [8]),
    .S(sel),
    .Z(out[8])
  );
  MUX2_X1 _09_ (
    .A(\in_$000 [9]),
    .B(\in_$001 [9]),
    .S(sel),
    .Z(out[9])
  );
  MUX2_X1 _10_ (
    .A(\in_$000 [10]),
    .B(\in_$001 [10]),
    .S(sel),
    .Z(out[10])
  );
  MUX2_X1 _11_ (
    .A(\in_$000 [11]),
    .B(\in_$001 [11]),
    .S(sel),
    .Z(out[11])
  );
  MUX2_X1 _12_ (
    .A(\in_$000 [12]),
    .B(\in_$001 [12]),
    .S(sel),
    .Z(out[12])
  );
  MUX2_X1 _13_ (
    .A(\in_$000 [13]),
    .B(\in_$001 [13]),
    .S(sel),
    .Z(out[13])
  );
  MUX2_X1 _14_ (
    .A(\in_$000 [14]),
    .B(\in_$001 [14]),
    .S(sel),
    .Z(out[14])
  );
  MUX2_X1 _15_ (
    .A(\in_$000 [15]),
    .B(\in_$001 [15]),
    .S(sel),
    .Z(out[15])
  );
endmodule

module RegEn_0x68db79c4ec1d6e5b(clk, en, in_, out, reset);
  wire [15:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  input clk;
  input en;
  input [15:0] in_;
  output [15:0] out;
  input reset;
  MUX2_X1 _17_ (
    .A(out[0]),
    .B(in_[0]),
    .S(en),
    .Z(_00_[0])
  );
  MUX2_X1 _18_ (
    .A(out[1]),
    .B(in_[1]),
    .S(en),
    .Z(_00_[1])
  );
  MUX2_X1 _19_ (
    .A(out[2]),
    .B(in_[2]),
    .S(en),
    .Z(_00_[2])
  );
  MUX2_X1 _20_ (
    .A(out[3]),
    .B(in_[3]),
    .S(en),
    .Z(_00_[3])
  );
  MUX2_X1 _21_ (
    .A(out[4]),
    .B(in_[4]),
    .S(en),
    .Z(_00_[4])
  );
  MUX2_X1 _22_ (
    .A(out[5]),
    .B(in_[5]),
    .S(en),
    .Z(_00_[5])
  );
  MUX2_X1 _23_ (
    .A(out[6]),
    .B(in_[6]),
    .S(en),
    .Z(_00_[6])
  );
  MUX2_X1 _24_ (
    .A(out[7]),
    .B(in_[7]),
    .S(en),
    .Z(_00_[7])
  );
  MUX2_X1 _25_ (
    .A(out[8]),
    .B(in_[8]),
    .S(en),
    .Z(_00_[8])
  );
  MUX2_X1 _26_ (
    .A(out[9]),
    .B(in_[9]),
    .S(en),
    .Z(_00_[9])
  );
  MUX2_X1 _27_ (
    .A(out[10]),
    .B(in_[10]),
    .S(en),
    .Z(_00_[10])
  );
  MUX2_X1 _28_ (
    .A(out[11]),
    .B(in_[11]),
    .S(en),
    .Z(_00_[11])
  );
  MUX2_X1 _29_ (
    .A(out[12]),
    .B(in_[12]),
    .S(en),
    .Z(_00_[12])
  );
  MUX2_X1 _30_ (
    .A(out[13]),
    .B(in_[13]),
    .S(en),
    .Z(_00_[13])
  );
  MUX2_X1 _31_ (
    .A(out[14]),
    .B(in_[14]),
    .S(en),
    .Z(_00_[14])
  );
  MUX2_X1 _32_ (
    .A(out[15]),
    .B(in_[15]),
    .S(en),
    .Z(_00_[15])
  );
  DFF_X1 _33_ (
    .CK(clk),
    .D(_00_[0]),
    .Q(out[0]),
    .QN(_01_)
  );
  DFF_X1 _34_ (
    .CK(clk),
    .D(_00_[1]),
    .Q(out[1]),
    .QN(_02_)
  );
  DFF_X1 _35_ (
    .CK(clk),
    .D(_00_[2]),
    .Q(out[2]),
    .QN(_03_)
  );
  DFF_X1 _36_ (
    .CK(clk),
    .D(_00_[3]),
    .Q(out[3]),
    .QN(_04_)
  );
  DFF_X1 _37_ (
    .CK(clk),
    .D(_00_[4]),
    .Q(out[4]),
    .QN(_05_)
  );
  DFF_X1 _38_ (
    .CK(clk),
    .D(_00_[5]),
    .Q(out[5]),
    .QN(_06_)
  );
  DFF_X1 _39_ (
    .CK(clk),
    .D(_00_[6]),
    .Q(out[6]),
    .QN(_07_)
  );
  DFF_X1 _40_ (
    .CK(clk),
    .D(_00_[7]),
    .Q(out[7]),
    .QN(_08_)
  );
  DFF_X1 _41_ (
    .CK(clk),
    .D(_00_[8]),
    .Q(out[8]),
    .QN(_09_)
  );
  DFF_X1 _42_ (
    .CK(clk),
    .D(_00_[9]),
    .Q(out[9]),
    .QN(_10_)
  );
  DFF_X1 _43_ (
    .CK(clk),
    .D(_00_[10]),
    .Q(out[10]),
    .QN(_11_)
  );
  DFF_X1 _44_ (
    .CK(clk),
    .D(_00_[11]),
    .Q(out[11]),
    .QN(_12_)
  );
  DFF_X1 _45_ (
    .CK(clk),
    .D(_00_[12]),
    .Q(out[12]),
    .QN(_13_)
  );
  DFF_X1 _46_ (
    .CK(clk),
    .D(_00_[13]),
    .Q(out[13]),
    .QN(_14_)
  );
  DFF_X1 _47_ (
    .CK(clk),
    .D(_00_[14]),
    .Q(out[14]),
    .QN(_15_)
  );
  DFF_X1 _48_ (
    .CK(clk),
    .D(_00_[15]),
    .Q(out[15]),
    .QN(_16_)
  );
endmodule

module RegRst_0x9f365fdf6c8998a(clk, in_, out, reset);
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  input clk;
  input [1:0] in_;
  output [1:0] out;
  input reset;
  INV_X1 _05_ (
    .A(in_[0]),
    .ZN(_01_)
  );
  INV_X1 _06_ (
    .A(in_[1]),
    .ZN(_02_)
  );
  NOR2_X1 _07_ (
    .A1(_01_),
    .A2(reset),
    .ZN(_00_[0])
  );
  NOR2_X1 _08_ (
    .A1(reset),
    .A2(_02_),
    .ZN(_00_[1])
  );
  DFF_X1 _09_ (
    .CK(clk),
    .D(_00_[0]),
    .Q(out[0]),
    .QN(_03_)
  );
  DFF_X1 _10_ (
    .CK(clk),
    .D(_00_[1]),
    .Q(out[1]),
    .QN(_04_)
  );
endmodule

module Subtractor_0x422b1f52edd46a85(clk, in0, in1, out, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  input clk;
  input [15:0] in0;
  input [15:0] in1;
  output [15:0] out;
  input reset;
  INV_X1 _074_ (
    .A(in1[0]),
    .ZN(_030_)
  );
  INV_X1 _075_ (
    .A(in1[1]),
    .ZN(_031_)
  );
  INV_X1 _076_ (
    .A(in0[2]),
    .ZN(_032_)
  );
  INV_X1 _077_ (
    .A(in1[3]),
    .ZN(_033_)
  );
  INV_X1 _078_ (
    .A(in0[4]),
    .ZN(_034_)
  );
  INV_X1 _079_ (
    .A(in0[5]),
    .ZN(_035_)
  );
  INV_X1 _080_ (
    .A(in0[6]),
    .ZN(_036_)
  );
  INV_X1 _081_ (
    .A(in0[7]),
    .ZN(_037_)
  );
  INV_X1 _082_ (
    .A(in1[8]),
    .ZN(_038_)
  );
  INV_X1 _083_ (
    .A(in1[9]),
    .ZN(_039_)
  );
  INV_X1 _084_ (
    .A(in0[10]),
    .ZN(_040_)
  );
  INV_X1 _085_ (
    .A(in1[11]),
    .ZN(_041_)
  );
  INV_X1 _086_ (
    .A(in0[12]),
    .ZN(_042_)
  );
  INV_X1 _087_ (
    .A(in0[13]),
    .ZN(_043_)
  );
  INV_X1 _088_ (
    .A(in0[14]),
    .ZN(_044_)
  );
  XOR2_X1 _089_ (
    .A(in0[0]),
    .B(in1[0]),
    .Z(out[0])
  );
  NAND2_X1 _090_ (
    .A1(in0[1]),
    .A2(_031_),
    .ZN(_045_)
  );
  XNOR2_X1 _091_ (
    .A(in0[1]),
    .B(in1[1]),
    .ZN(_046_)
  );
  OAI21_X1 _092_ (
    .A(_046_),
    .B1(_030_),
    .B2(in0[0]),
    .ZN(_047_)
  );
  OR3_X1 _093_ (
    .A1(in0[0]),
    .A2(_030_),
    .A3(_046_),
    .ZN(_048_)
  );
  AND2_X1 _094_ (
    .A1(_047_),
    .A2(_048_),
    .ZN(out[1])
  );
  NOR2_X1 _095_ (
    .A1(_032_),
    .A2(in1[2]),
    .ZN(_049_)
  );
  XNOR2_X1 _096_ (
    .A(in0[2]),
    .B(in1[2]),
    .ZN(_050_)
  );
  INV_X1 _097_ (
    .A(_050_),
    .ZN(_051_)
  );
  AOI21_X1 _098_ (
    .A(_051_),
    .B1(_047_),
    .B2(_045_),
    .ZN(_052_)
  );
  AND3_X1 _099_ (
    .A1(_045_),
    .A2(_047_),
    .A3(_051_),
    .ZN(_053_)
  );
  NOR2_X1 _100_ (
    .A1(_052_),
    .A2(_053_),
    .ZN(out[2])
  );
  NAND2_X1 _101_ (
    .A1(in0[3]),
    .A2(_033_),
    .ZN(_054_)
  );
  XNOR2_X1 _102_ (
    .A(in0[3]),
    .B(in1[3]),
    .ZN(_055_)
  );
  OAI21_X1 _103_ (
    .A(_055_),
    .B1(_052_),
    .B2(_049_),
    .ZN(_056_)
  );
  OR3_X1 _104_ (
    .A1(_049_),
    .A2(_052_),
    .A3(_055_),
    .ZN(_057_)
  );
  AND2_X1 _105_ (
    .A1(_056_),
    .A2(_057_),
    .ZN(out[3])
  );
  NOR2_X1 _106_ (
    .A1(_034_),
    .A2(in1[4]),
    .ZN(_058_)
  );
  XNOR2_X1 _107_ (
    .A(in0[4]),
    .B(in1[4]),
    .ZN(_059_)
  );
  INV_X1 _108_ (
    .A(_059_),
    .ZN(_060_)
  );
  AOI21_X1 _109_ (
    .A(_060_),
    .B1(_056_),
    .B2(_054_),
    .ZN(_061_)
  );
  AND3_X1 _110_ (
    .A1(_054_),
    .A2(_056_),
    .A3(_060_),
    .ZN(_062_)
  );
  NOR2_X1 _111_ (
    .A1(_061_),
    .A2(_062_),
    .ZN(out[4])
  );
  XNOR2_X1 _112_ (
    .A(in0[5]),
    .B(in1[5]),
    .ZN(_063_)
  );
  OAI21_X1 _113_ (
    .A(_063_),
    .B1(_061_),
    .B2(_058_),
    .ZN(_064_)
  );
  OR3_X1 _114_ (
    .A1(_058_),
    .A2(_061_),
    .A3(_063_),
    .ZN(_065_)
  );
  AND2_X1 _115_ (
    .A1(_064_),
    .A2(_065_),
    .ZN(out[5])
  );
  OAI21_X1 _116_ (
    .A(_064_),
    .B1(in1[5]),
    .B2(_035_),
    .ZN(_066_)
  );
  NOR2_X1 _117_ (
    .A1(_036_),
    .A2(in1[6]),
    .ZN(_067_)
  );
  XNOR2_X1 _118_ (
    .A(in0[6]),
    .B(in1[6]),
    .ZN(_068_)
  );
  XOR2_X1 _119_ (
    .A(_066_),
    .B(_068_),
    .Z(out[6])
  );
  AOI21_X1 _120_ (
    .A(_067_),
    .B1(_068_),
    .B2(_066_),
    .ZN(_069_)
  );
  NAND2_X1 _121_ (
    .A1(_037_),
    .A2(in1[7]),
    .ZN(_070_)
  );
  INV_X1 _122_ (
    .A(_070_),
    .ZN(_071_)
  );
  NOR2_X1 _123_ (
    .A1(_037_),
    .A2(in1[7]),
    .ZN(_072_)
  );
  INV_X1 _124_ (
    .A(_072_),
    .ZN(_073_)
  );
  NOR2_X1 _125_ (
    .A1(_071_),
    .A2(_072_),
    .ZN(_000_)
  );
  XNOR2_X1 _126_ (
    .A(_069_),
    .B(_000_),
    .ZN(out[7])
  );
  XNOR2_X1 _127_ (
    .A(in0[8]),
    .B(in1[8]),
    .ZN(_001_)
  );
  INV_X1 _128_ (
    .A(_001_),
    .ZN(_002_)
  );
  AOI21_X1 _129_ (
    .A(_071_),
    .B1(_073_),
    .B2(_069_),
    .ZN(_003_)
  );
  AOI211_X1 _130_ (
    .A(_071_),
    .B(_002_),
    .C1(_073_),
    .C2(_069_),
    .ZN(_004_)
  );
  XNOR2_X1 _131_ (
    .A(_002_),
    .B(_003_),
    .ZN(out[8])
  );
  AOI21_X1 _132_ (
    .A(_004_),
    .B1(_038_),
    .B2(in0[8]),
    .ZN(_005_)
  );
  NAND2_X1 _133_ (
    .A1(in0[9]),
    .A2(_039_),
    .ZN(_006_)
  );
  NOR2_X1 _134_ (
    .A1(in0[9]),
    .A2(_039_),
    .ZN(_007_)
  );
  XNOR2_X1 _135_ (
    .A(in0[9]),
    .B(in1[9]),
    .ZN(_008_)
  );
  XNOR2_X1 _136_ (
    .A(_005_),
    .B(_008_),
    .ZN(out[9])
  );
  NOR2_X1 _137_ (
    .A1(_040_),
    .A2(in1[10]),
    .ZN(_009_)
  );
  XNOR2_X1 _138_ (
    .A(in0[10]),
    .B(in1[10]),
    .ZN(_010_)
  );
  AOI21_X1 _139_ (
    .A(_007_),
    .B1(_006_),
    .B2(_005_),
    .ZN(_011_)
  );
  XOR2_X1 _140_ (
    .A(_010_),
    .B(_011_),
    .Z(out[10])
  );
  AOI21_X1 _141_ (
    .A(_009_),
    .B1(_010_),
    .B2(_011_),
    .ZN(_012_)
  );
  NOR2_X1 _142_ (
    .A1(in0[11]),
    .A2(_041_),
    .ZN(_013_)
  );
  XNOR2_X1 _143_ (
    .A(in0[11]),
    .B(in1[11]),
    .ZN(_014_)
  );
  XNOR2_X1 _144_ (
    .A(_012_),
    .B(_014_),
    .ZN(out[11])
  );
  NOR2_X1 _145_ (
    .A1(_042_),
    .A2(in1[12]),
    .ZN(_015_)
  );
  XNOR2_X1 _146_ (
    .A(in0[12]),
    .B(in1[12]),
    .ZN(_016_)
  );
  INV_X1 _147_ (
    .A(_016_),
    .ZN(_017_)
  );
  AOI221_X1 _148_ (
    .A(_009_),
    .B1(_010_),
    .B2(_011_),
    .C1(_041_),
    .C2(in0[11]),
    .ZN(_018_)
  );
  NOR2_X1 _149_ (
    .A1(_013_),
    .A2(_018_),
    .ZN(_019_)
  );
  NOR3_X1 _150_ (
    .A1(_013_),
    .A2(_017_),
    .A3(_018_),
    .ZN(_020_)
  );
  XNOR2_X1 _151_ (
    .A(_017_),
    .B(_019_),
    .ZN(out[12])
  );
  NOR2_X1 _152_ (
    .A1(_015_),
    .A2(_020_),
    .ZN(_021_)
  );
  XNOR2_X1 _153_ (
    .A(in0[13]),
    .B(in1[13]),
    .ZN(_022_)
  );
  OAI21_X1 _154_ (
    .A(_022_),
    .B1(_020_),
    .B2(_015_),
    .ZN(_023_)
  );
  XNOR2_X1 _155_ (
    .A(_021_),
    .B(_022_),
    .ZN(out[13])
  );
  OAI21_X1 _156_ (
    .A(_023_),
    .B1(in1[13]),
    .B2(_043_),
    .ZN(_024_)
  );
  NAND2_X1 _157_ (
    .A1(_044_),
    .A2(in1[14]),
    .ZN(_025_)
  );
  NOR2_X1 _158_ (
    .A1(_044_),
    .A2(in1[14]),
    .ZN(_026_)
  );
  XOR2_X1 _159_ (
    .A(in0[14]),
    .B(in1[14]),
    .Z(_027_)
  );
  XNOR2_X1 _160_ (
    .A(_024_),
    .B(_027_),
    .ZN(out[14])
  );
  AOI21_X1 _161_ (
    .A(_026_),
    .B1(_025_),
    .B2(_024_),
    .ZN(_028_)
  );
  XNOR2_X1 _162_ (
    .A(in0[15]),
    .B(in1[15]),
    .ZN(_029_)
  );
  XNOR2_X1 _163_ (
    .A(_028_),
    .B(_029_),
    .ZN(out[15])
  );
endmodule

module ZeroComparator_0x422b1f52edd46a85(clk, in_, out, reset);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  input clk;
  input [15:0] in_;
  output out;
  input reset;
  NOR3_X1 _05_ (
    .A1(in_[1]),
    .A2(in_[2]),
    .A3(in_[13]),
    .ZN(_00_)
  );
  NOR3_X1 _06_ (
    .A1(in_[8]),
    .A2(in_[11]),
    .A3(in_[14]),
    .ZN(_01_)
  );
  NOR4_X1 _07_ (
    .A1(in_[4]),
    .A2(in_[7]),
    .A3(in_[9]),
    .A4(in_[10]),
    .ZN(_02_)
  );
  NOR4_X1 _08_ (
    .A1(in_[0]),
    .A2(in_[5]),
    .A3(in_[6]),
    .A4(in_[15]),
    .ZN(_03_)
  );
  NAND4_X1 _09_ (
    .A1(_00_),
    .A2(_01_),
    .A3(_02_),
    .A4(_03_),
    .ZN(_04_)
  );
  NOR3_X1 _10_ (
    .A1(in_[3]),
    .A2(in_[12]),
    .A3(_04_),
    .ZN(out)
  );
endmodule

module gcd(clk, req_msg, req_rdy, req_val, reset, resp_msg, resp_rdy, resp_val);
  input clk;
  wire [1:0] \ctrl$a_mux_sel ;
  wire \ctrl$a_reg_en ;
  wire \ctrl$b_mux_sel ;
  wire \ctrl$b_reg_en ;
  wire \ctrl$is_a_lt_b ;
  wire \ctrl$is_b_zero ;
  input [31:0] req_msg;
  output req_rdy;
  input req_val;
  input reset;
  output [15:0] resp_msg;
  input resp_rdy;
  output resp_val;
  GcdUnitCtrlRTL_0x4d0fc71ead8d3d9e ctrl (
    .a_mux_sel(\ctrl$a_mux_sel ),
    .a_reg_en(\ctrl$a_reg_en ),
    .b_mux_sel(\ctrl$b_mux_sel ),
    .b_reg_en(\ctrl$b_reg_en ),
    .clk(clk),
    .is_a_lt_b(\ctrl$is_a_lt_b ),
    .is_b_zero(\ctrl$is_b_zero ),
    .req_rdy(req_rdy),
    .req_val(req_val),
    .reset(reset),
    .resp_rdy(resp_rdy),
    .resp_val(resp_val)
  );
  GcdUnitDpathRTL_0x4d0fc71ead8d3d9e dpath (
    .a_mux_sel(\ctrl$a_mux_sel ),
    .a_reg_en(\ctrl$a_reg_en ),
    .b_mux_sel(\ctrl$b_mux_sel ),
    .b_reg_en(\ctrl$b_reg_en ),
    .clk(clk),
    .is_a_lt_b(\ctrl$is_a_lt_b ),
    .is_b_zero(\ctrl$is_b_zero ),
    .req_msg_a(req_msg[31:16]),
    .req_msg_b(req_msg[15:0]),
    .reset(reset),
    .resp_msg(resp_msg)
  );
endmodule
